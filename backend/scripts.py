import os
import sys
import pandas as pd
from decimal import Decimal
import django

# Add the project root to the Python path
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Kh·ªüi t·∫°o Django
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "backend.settings")  # C·∫≠p nh·∫≠t theo t√™n project
django.setup()

from product.models import Product
from inventory.models import StockEntry, Stock, Supplier
from order.models import Order, OrderItem
from payment.models import Invoice
from user.models import Customer, Address
from django.contrib.auth.models import User

# ƒê·ªçc file Excel
FILE_PATH = os.path.join(os.path.dirname(__file__), "selldata.xlsx")
df = pd.read_excel(FILE_PATH, sheet_name="Sheet1")

# Ki·ªÉm tra c·ªôt d·ªØ li·ªáu
print("C√°c c·ªôt trong file Excel:", df.columns)

# L·∫•y user admin l√†m ng∆∞·ªùi t·∫°o
try:
    admin_user = User.objects.get(username="danielfung")
except User.DoesNotExist:
    print("‚ö†Ô∏è User 'danielfung' kh√¥ng t·ªìn t·∫°i. Vui l√≤ng t·∫°o user ho·∫∑c ƒë·ªïi username.")
    exit()

# Import d·ªØ li·ªáu t·ª´ file Excel
for index, row in df.iterrows():
    # T·∫°o ho·∫∑c l·∫•y kh√°ch h√†ng
    customer, _ = Customer.objects.get_or_create(
        full_name=row["T√™n kh√°ch h√†ng"],
        phone_number=row["S·ªë ƒëi·ªán tho·∫°i"],
        defaults={
            "email": row.get("Email", None),
            "user": admin_user,  # ‚úÖ N·∫øu Customer c√≥ li√™n k·∫øt User
        },
    )

    # T·∫°o ƒë·ªãa ch·ªâ
    if pd.notna(row["ƒê·ªãa ch·ªâ"]) and pd.notna(row["Qu·∫≠n"]):
        Address.objects.get_or_create(
            customer=customer,
            street=row["ƒê·ªãa ch·ªâ"],
            district=row["Qu·∫≠n"],
            city="H·ªì Ch√≠ Minh"
        )

    # T·∫°o s·∫£n ph·∫©m
    product, _ = Product.objects.get_or_create(name=row["T√™n s·∫£n ph·∫©m"])

    # T·∫°o nh√† cung c·∫•p
    supplier, _ = Supplier.objects.get_or_create(name=row["Nh√† cung c·∫•p"])

    # Nh·∫≠p kho
    stock_entry = StockEntry.objects.create(
        product=product,
        supplier=supplier,
        purchase_price=Decimal(row["Gi√° nh·∫≠p"]),
        selling_price=Decimal(row["Gi√° 1 s·∫£n ph·∫©m"]),
        quantity=int(row["S·ªë l∆∞·ª£ng"]),
        created_by=admin_user,  # ‚úÖ ƒê·∫£m b·∫£o kh√¥ng NULL
    )

    # C·∫≠p nh·∫≠t t·ªìn kho
    stock, _ = Stock.objects.get_or_create(product=product, defaults={"quantity": 0})
    stock.quantity += int(row["S·ªë l∆∞·ª£ng"])
    stock.save()

    # T·∫°o ƒë∆°n h√†ng
    order = Order.objects.create(
        customer=customer,
        created_at=pd.to_datetime(row["Ng√†y b√°n"]),
        status="DELIVERED",
        order_type="ONLINE",
        created_by=admin_user,  # ‚úÖ Kh√¥ng ƒë·ªÉ NULL
    )

    # T√≠nh gi√° cu·ªëi c√πng
    price_sold = Decimal(row["Gi√° 1 s·∫£n ph·∫©m"])
    discount = Decimal(row["Chi·∫øt kh·∫•u"])
    final_price_per_item = price_sold * (1 - discount)
    total_final_price = final_price_per_item * int(row["S·ªë l∆∞·ª£ng"])

    # T·∫°o OrderItem
    order_item = OrderItem.objects.create(
        order=order,
        product=product,
        quantity=int(row["S·ªë l∆∞·ª£ng"]),
        price_sold=price_sold,
        discount=discount,
        final_price=final_price_per_item,
        final_total=total_final_price,
        created_by=admin_user,  # ‚úÖ ƒê·∫£m b·∫£o c√≥ gi√° tr·ªã
    )

    # T·∫°o h√≥a ƒë∆°n
    invoice = Invoice.objects.create(
        order=order,
        amount_paid=total_final_price,
        discount_applied=discount * 100,
        final_price=total_final_price,
        payment_method="CASH",
        created_by=admin_user,  # ‚úÖ Kh√¥ng NULL
    )

print("üéâ Import d·ªØ li·ªáu ho√†n t·∫•t!")

